engineConfig:
  defaultFlushInterval: "500"
  datasourceConfigurations:
    - kind: GRAPHQL
      rootNodes:
        - typeName: Query
          fieldNames:
            - indicator_graphicsCollection
            - indicator_instancesCollection
            - indicatorsCollection
      childNodes:
        - typeName: indicator_graphics
          fieldNames:
            - nodeId
            - id
            - indicator_id
            - created_at
            - context
            - graphics
            - indicator_instance_id
            - indicator_instances
        - typeName: indicator_instances
          fieldNames:
            - nodeId
            - id
            - indicator_id
            - name
            - settings
            - created_at
            - extraction_rules
            - indicators
            - indicator_graphicsCollection
        - typeName: indicators
          fieldNames:
            - nodeId
            - id
            - indicator_id
            - name
            - enabled
            - settings
            - created_at
            - indicator_instancesCollection
      overrideFieldPathFromAlias: true
      customGraphql:
        fetch:
          url:
            staticVariableContent: https://oesozgyijixtyoattkmc.supabase.co/graphql/v1
          method: POST
          body: {}
          baseUrl: {}
          path: {}
          headers:
            - propagate:
                matching: apikey
        subscription:
          enabled: true
          url:
            staticVariableContent: https://oesozgyijixtyoattkmc.supabase.co/graphql/v1
          protocol: GRAPHQL_SUBSCRIPTION_PROTOCOL_WS
          websocketSubprotocol: GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO
        federation:
          enabled: true
          serviceSdl: |
            scalar UUID
            scalar JSON
            scalar Datetime

            type indicator_graphics {
              nodeId: ID!
              id: UUID!
              indicator_id: String!
              created_at: Datetime
              context: JSON
              graphics: JSON
              indicator_instance_id: UUID
              indicator_instances: indicator_instances
            }

            type indicator_instances {
              nodeId: ID!
              id: UUID!
              indicator_id: String
              name: String!
              settings: JSON
              created_at: Datetime
              extraction_rules: JSON
              indicators: indicators
              indicator_graphicsCollection: [indicator_graphics]
            }

            type indicators {
              nodeId: ID!
              id: UUID!
              indicator_id: String!
              name: String!
              enabled: Boolean
              settings: JSON
              created_at: Datetime
              indicator_instancesCollection: [indicator_instances]
            }

            type Query {
              indicator_graphicsCollection: [indicator_graphics]
              indicator_instancesCollection: [indicator_instances]
              indicatorsCollection: [indicators]
            }
        upstreamSchema:
          key: fa07c5ef2625cfa3918dca2421a3f9987816bfbc
      requestTimeoutSeconds: "10"
      id: 7870abab-3160-4aa4-bd4b-8c574414a3e8
  graphqlSchema: |
    schema {
      query: Query
    }
    directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION
    scalar UUID
    scalar JSON
    scalar Datetime
    type indicator_graphics {
      nodeId: ID!
      id: UUID!
      indicator_id: String!
      created_at: Datetime
      context: JSON
      graphics: JSON
      indicator_instance_id: UUID
      indicator_instances: indicator_instances
    }
    type indicator_instances {
      nodeId: ID!
      id: UUID!
      indicator_id: String
      name: String!
      settings: JSON
      created_at: Datetime
      extraction_rules: JSON
      indicators: indicators
      indicator_graphicsCollection: [indicator_graphics]
    }
    type indicators {
      nodeId: ID!
      id: UUID!
      indicator_id: String!
      name: String!
      enabled: Boolean
      settings: JSON
      created_at: Datetime
      indicator_instancesCollection: [indicator_instances]
    }
    type Query {
      indicator_graphicsCollection: [indicator_graphics]
      indicator_instancesCollection: [indicator_instances]
      indicatorsCollection: [indicators]
    }
  stringStorage:
    fa07c5ef2625cfa3918dca2421a3f9987816bfbc: |
      schema {
        query: Query
      }
      directive @extends on INTERFACE | OBJECT
      directive @external on FIELD_DEFINITION | OBJECT
      directive @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT
      directive @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION
      directive @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION
      directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION
      scalar Datetime
      scalar JSON
      type Query {
        indicator_graphicsCollection: [indicator_graphics]
        indicator_instancesCollection: [indicator_instances]
        indicatorsCollection: [indicators]
      }
      scalar UUID
      type indicator_graphics {
        context: JSON
        created_at: Datetime
        graphics: JSON
        id: UUID!
        indicator_id: String!
        indicator_instance_id: UUID
        indicator_instances: indicator_instances
        nodeId: ID!
      }
      type indicator_instances {
        created_at: Datetime
        extraction_rules: JSON
        id: UUID!
        indicator_graphicsCollection: [indicator_graphics]
        indicator_id: String
        indicators: indicators
        name: String!
        nodeId: ID!
        settings: JSON
      }
      type indicators {
        created_at: Datetime
        enabled: Boolean
        id: UUID!
        indicator_id: String!
        indicator_instancesCollection: [indicator_instances]
        name: String!
        nodeId: ID!
        settings: JSON
      }
      scalar openfed__FieldSet
  version: 0bc73f1c-9487-4475-95e5-ba67a257bb32
  subgraphs:
    - id: 7870abab-3160-4aa4-bd4b-8c574414a3e8
      name: daas
      routingUrl: https://oesozgyijixtyoattkmc.supabase.co/graphql/v1
  compatibilityVersion: "1:{{$COMPOSITION__VERSION}}"
